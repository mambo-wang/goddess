{"version":3,"sources":["webpack:///src/components/parameter/parameter.vue","webpack:///./src/components/parameter/parameter.vue?3d95","webpack:///./src/components/parameter/parameter.vue","webpack:///./src/components/parameter/parameter.vue?ea2c"],"names":["parameter","queryConfig","_this","this","fileSystemPathDialog","_this2","_this3","_this4","disks","isAll","isNone","_this5","val","_this6","path","index","isSelected","row","isOpen","data","changedData","$invalid","_value","selectArea","tipDialog","parameter_parameter","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","separator","_v","_s","$t","key","state","formState","on","submit","$event","preventDefault","onSubmit","tag","domProps","textContent","_l","value","directives","name","rawName","expression","type","required","input","target","composing","$set","click","selectPath","staticStyle","font-size","_e","isCapacityGB","options","units","getSelectValue","getUnitValue","model","callback","$$v","disabled","formDisabled","storageFormState","onStorageSubmit","class","showName","placeholder","getChangeSelectValue","unit","storageFormDisabled","ref","visible","selectPathData","title","update:visible","close","changeSelected","subDisks","checked","indeterminate","isIndeterminate","change","firstPathChange","child","childPathChange","confirm","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","customBlock","__esModule","default","__webpack_exports__","module","exports","__i18n","push"],"mappings":"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","file":"static/js/8.761828f2f04e47647389.js","sourcesContent":["<template>\r\n    <div class=\"h-full\">\r\n        <div class=\"panel-nav\">\r\n            <el-breadcrumb separator=\"/\" class=\"m-l-lg\">\r\n                <el-breadcrumb-item>\r\n                {{$t('parameter.title')}}\r\n                </el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"panel-body-list clearfix\">\r\n            <section class=\"m-t-sm\">\r\n                <header>{{$t('parameter.initDeploy')}}</header>\r\n                <span class=\"tip-info\">{{$t('parameter.initInfo')}}</span>\r\n                <vue-form :state=\"formState\" @submit.prevent=\"onSubmit\" key=\"init\" class=\"parameter-form\">\r\n                    <validate tag=\"div\" class=\"m-b-md clearfix\" key=\"fileSystemPath\">\r\n                       <div class=\"pull-left\">\r\n                           <label v-text=\"$t('parameter.path')\" class=\"required\"></label>\r\n                       </div>\r\n                        <div class=\"pull-left parameter-input m-l-lg\">\r\n                           <div class=\"parameter-textarea\">\r\n                               <span v-for=\"value in data.fileSystemPath\" :key=\"value\">{{value}}<br></span>\r\n                               <input type=\"hidden\" v-model=\"data.fileSystemPath\" name=\"fileSystemPath\" required>\r\n                           </div>\r\n                        </div>\r\n                        <div class=\"parameter-select-btn\">\r\n                            <button @click=\"selectPath\" type=\"button\">{{$t('parameter.selectPath')}}</button>\r\n                        </div>\r\n                    </validate>\r\n                    <validate tag=\"div\" class=\"m-b-md clearfix\" key=\"capacity\">\r\n                        <div class=\"pull-left\">\r\n                           <label v-text=\"$t('parameter.capacity')\" class=\"required\"></label>\r\n                       </div>\r\n                        <div class=\"pull-left parameter-input m-l-lg\" style=\"font-size:0\">\r\n                            <input \r\n                                type=\"text\" \r\n                                v-if=\"isCapacityGB\"\r\n                                v-model=\"data.capacity\" \r\n                                name=\"capacity\" \r\n                                :required=\"true\">\r\n                            <input \r\n                                type=\"text\" \r\n                                v-if=\"!isCapacityGB\"\r\n                                v-model=\"data.capacityTB\" \r\n                                name=\"capacity\" \r\n                                :required=\"true\">\r\n                            <select-area class=\"select-unit\"\r\n                                :options=\"units.options\"\r\n                                v-model=\"data.unit\"\r\n                                @getSelectValue=\"getUnitValue\"></select-area>\r\n                        </div>\r\n                    </validate>\r\n                    <button class=\"btn btn-transform btn-apply-size\" :disabled=\"formDisabled\">{{$t('parameter.apply')}}</button>\r\n                </vue-form>\r\n            </section>\r\n            <section class=\"m-t-lg\">\r\n                <header>{{$t('parameter.personalStorage')}}</header>\r\n                <span class=\"tip-info\">{{$t('parameter.storageInfo')}}</span>\r\n                <vue-form :state=\"storageFormState\" @submit.prevent=\"onStorageSubmit\" key=\"storage\" class=\"parameter-form\">\r\n                    <validate tag=\"div\" class=\"m-b-md clearfix\"  v-for=\"row in storageFields\" :key=\"row.name\">\r\n                       <div class=\"pull-left\">\r\n                           <label v-text=\"row.showName\" :class=\"row.required?'required':''\"></label>\r\n                       </div>\r\n                        <div class=\"pull-left parameter-input m-l-lg\">\r\n                            <select-area v-if=\"row.type === 'select'\"\r\n                                :placeholder=\"row.placeholder\"\r\n                                :name=\"row.name\"\r\n                                @getSelectValue=\"getChangeSelectValue\"\r\n                                :options=\"row.options\" \r\n                                :value=\"data[row.name]\"\r\n                                :required=\"true\"\r\n                                ></select-area>\r\n                            <input \r\n                                type=\"text\" \r\n                                v-if=\"row.type === 'text'\" \r\n                                v-model=\"data[row.name]\"\r\n                                :name=\"row.name\" \r\n                                :placeholder=\"row.placeholder\" \r\n                                :required=\"true\">\r\n                            <span v-if=\"!!row.unit\">{{row.unit}}</span>\r\n                        </div>\r\n                    </validate>\r\n                    <button class=\"btn btn-transform btn-apply-size\" :disabled=\"storageFormDisabled\">{{$t('parameter.apply')}}</button>\r\n                </vue-form>\r\n            </section>\r\n        </div>\r\n        <el-dialog ref=\"selectDialog\" :visible.sync=\"selectPathData.visible\" @close=\"selectPathData.close\" :title=\"$t('parameter.selectDiskPath')\" class=\"path-dialog\">\r\n            <div class=\"dialog-body clearfix\">\r\n                <div class=\"path-panel\">\r\n                    <span>{{$t('parameter.selectPath')}}</span>\r\n                    <div class=\"path-select-panel\">\r\n                        <div v-for=\"row in selectPathData.data\" @click=\"changeSelected(row)\">\r\n                            <span>\r\n                                <span :class=\"[row.subDisks?'':'no-child-folder']\" v-if=\"!row.subDisks\"></span>\r\n                                <i class=\"fa fa-caret-down folder-icon\" v-if=\"row.subDisks && row.isOpen\"></i>\r\n                                <i class=\"fa fa-caret-right folder-icon\" v-if=\"row.subDisks && !row.isOpen\"></i>\r\n                                <el-checkbox :checked=\"row.isSelected\" v-model=\"row.isSelected\" :indeterminate=\"row.isIndeterminate\" @change=\"firstPathChange(row)\"></el-checkbox>\r\n                                <i class=\"fa fa-folder text-folder\"></i>\r\n                                <span class=\"folder-name m-l-xs\">{{row.path}}</span>\r\n                            </span>\r\n                            <div class=\"m-l-lg\" v-show=\"row.subDisks && row.isOpen\">\r\n                                <span v-for=\"child in row.subDisks\">\r\n                                    <el-checkbox :checked=\"child.isSelected\" v-model=\"child.isSelected\" @change=\"childPathChange(child, row)\"></el-checkbox>\r\n                                    <i class=\"fa fa-folder text-folder\"></i>\r\n                                    <span class=\"folder-name m-l-xs\">{{child.path}}</span><br>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <span>{{$t('parameter.selectedPath')}}</span>\r\n                    <div class=\"path-selected-panel\">\r\n                        <span v-for=\"value in data.fileSystemPathDialog\" :key=\"value\">{{value}}<br></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"dialog-footer\">\r\n                <el-button class=\"btn btn-gradient btn-sm\"  @click=\"selectPathData.confirm\">{{$t('common.confirm')}}</el-button>\r\n                <el-button class=\"btn btn-transparent btn-sm\" @click=\"selectPathData.close\">{{$t('common.cancel')}}</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import selectArea from '../common/selectArea'\r\n    import tipDialog from '../common/tipDialog'\r\n    import _ from 'lodash'\r\n    import {isArray, isFunction} from '@/assets/js/untils'\r\n\r\n    export default {\r\n        created() {\r\n            this.queryConfig()\r\n        },\r\n        data() {\r\n            return {\r\n                formState: {},\r\n                storageFormState: {},\r\n                isCapacityGB: true,\r\n                data: {\r\n                    fileSystemPath: [],\r\n                    fileSystemPathDialog: [],\r\n                    fileSystemType: 'ext4',\r\n                    quota:'',\r\n                    unit: 'GB',\r\n                    capacity: '',\r\n                    capacityTB: ''\r\n                },\r\n                storageFields: [{\r\n                    name: 'quota',\r\n                    showName: this.$t('parameter.quota'),\r\n                    required: true,\r\n                    type: 'text',\r\n                    unit: 'GB'\r\n                }],\r\n                units: {\r\n                    options: [{\r\n                        value: 'GB'\r\n                    }, {\r\n                        value: 'TB'\r\n                    }]\r\n                },\r\n                selectPathData: {\r\n                    visible: false,\r\n                    data: [],\r\n                    close: () => {\r\n                        this.selectPathData.visible = false\r\n                    },\r\n                    confirm: () => {\r\n                        this.selectPathData.visible = false\r\n                        this.data.fileSystemPath = this.data.fileSystemPathDialog\r\n                    }\r\n                },\r\n                defaultProps: {\r\n                    children: 'subDisks'\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            onSubmit() {\r\n                this.$httpMethods.configServer.modifyConfig(this.data).then(res => {\r\n                    if(res && res.status) {\r\n                        this.$notify({\r\n                            type: 'success',\r\n                            name: this.$t('common.success'),\r\n                            message: this.$t('parameter.modifySuccess')\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            onStorageSubmit() {\r\n                this.$httpMethods.configServer.modifyQuota(this.data.quota).then(res => {\r\n                    if(res && res.status ===200) {\r\n                        this.queryConfig()\r\n                        this.$notify({\r\n                            type: 'success',\r\n                            title: this.$t('common.success'),\r\n                            message: this.$t('parameter.modifySuccess')\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            getChangeSelectValue() {\r\n\r\n            },\r\n            selectPath() {\r\n                this.$httpMethods.configServer.queryDisks().then(res => {\r\n                    if(res && res.status === 200){\r\n                        this.selectPathData.data = res.data.disks\r\n                        this.data.fileSystemPathDialog = _.clone(this.data.fileSystemPath) || []\r\n                        this.selectPathData.data.forEach(disk => {\r\n                            if(!!disk.subDisks) {\r\n                                let isNone = true\r\n                                let isAll = true\r\n                                disk.subDisks.forEach(sub => {\r\n                                    this.data.fileSystemPathDialog.indexOf(sub.path) > -1 ? sub.isSelected = true : sub.isSelected = false\r\n                                    if(!sub.isSelected) {\r\n                                        isAll = false\r\n                                    } else {\r\n                                        isNone = false\r\n                                    }\r\n                                })\r\n                                disk.isSelected = isAll\r\n                                disk.isIndeterminate = !isAll && !isNone\r\n                            } else {\r\n                                this.data.fileSystemPathDialog.indexOf(disk.path) > -1 ? disk.isSelected = true : disk.isSelected = false\r\n                            }\r\n                        })\r\n                        this.selectPathData.visible = true\r\n                    }\r\n                })\r\n            },\r\n            queryConfig() {\r\n                this.$httpMethods.configServer.queryConfig().then(res => {\r\n                    if(res && res.status === 200) {\r\n                        this.data = Object.assign(this.data, res.data, {fileSystemType: 'ext4'})\r\n                    }\r\n                })\r\n            },\r\n            getUnitValue(val) {\r\n                this.data.unit = val;\r\n            },\r\n            firstPathChange(row) {\r\n                row.isIndeterminate = false\r\n                if(!isArray(this.data.fileSystemPathDialog)) {\r\n                    this.data.fileSystemPathDialog = []\r\n                }\r\n                if(row.subDisks) {\r\n                    row.subDisks.forEach(item => {\r\n                        if(!!row.isSelected && !item.isSelected) {\r\n                            this.data.fileSystemPathDialog.push(item.path)\r\n                        }\r\n                        if(!row.isSelected && !!item.isSelected) {\r\n                            let index = this.data.fileSystemPathDialog.indexOf(item.path)\r\n                            console.log(index)\r\n                            if(index > -1) {\r\n                                this.data.fileSystemPathDialog.splice(index, 1)\r\n                            }\r\n                        }\r\n                        item.isSelected = !!row.isSelected\r\n                    })\r\n\r\n                } else {\r\n                    if (row.isSelected) {\r\n                        this.data.fileSystemPathDialog.push(row.path)\r\n                    } else {\r\n                        let index = this.data.fileSystemPathDialog.indexOf(row.path)\r\n                        if(index > -1) {\r\n                            this.data.fileSystemPathDialog.splice(index, 1)\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            },\r\n            childPathChange(child, row) {\r\n                let isNone = true\r\n                let isAll = true\r\n                row.subDisks.forEach(sub => {\r\n                    if(!sub.isSelected) {\r\n                        isAll = false\r\n                    } else {\r\n                        isNone = false\r\n                    }\r\n                })\r\n                row.isSelected = isAll\r\n                row.isIndeterminate = !isAll && !isNone\r\n                if(child.isSelected) {\r\n                    this.data.fileSystemPathDialog.push(child.path)\r\n                } else {\r\n                    let index = this.data.fileSystemPathDialog.indexOf(child.path)\r\n                    if(index > -1) {\r\n                        this.data.fileSystemPathDialog.splice(index, 1)\r\n                    }\r\n                }\r\n            },\r\n            changeSelected(row) {\r\n                let index = this.selectPathData.data.indexOf(row)\r\n                row.isOpen = !!!row.isOpen\r\n                let changedData= _.clone(this.selectPathData.data)\r\n                changedData[index] = row\r\n                this.selectPathData.data = changedData\r\n            }\r\n        },\r\n        computed: {\r\n            formDisabled() {\r\n                return this.formState.$invalid\r\n            },\r\n            storageFormDisabled() {\r\n                return this.storageFormState.$invalid\r\n            },\r\n            formatCapacity() {\r\n                return this.data.unit === 'GB' ? this.data.capacity:this.data.capacity/1024\r\n            }\r\n        },\r\n        watch: {\r\n            'data.unit'(newVal) {\r\n                if(newVal === 'GB') {\r\n                    this.isCapacityGB = true\r\n                    let value = (this.data.capacity / 1024).toFixed(1)\r\n                    if(value !== this.data.capacityTB) {\r\n                        this.data.capacity = this.data.capacityTB * 1024\r\n                    }\r\n                }\r\n                if(newVal === 'TB') {\r\n                    this.isCapacityGB = false\r\n                    let value = (this.data.capacity / 1024).toFixed(1)\r\n                    if(value !== this.data.capacityTB) {\r\n                        this.data.capacityTB = this.data.capacity % 1024 === 0?this.data.capacity / 1024:value\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        components: {\r\n            selectArea,\r\n            tipDialog\r\n        }\r\n    }\r\n</script>\r\n<i18n>\r\n    {\r\n        \"zh\": {\r\n            \"parameter\": {\r\n                \"title\": \"参数配置\",\r\n                \"apply\": \"应用\",\r\n                \"selectPath\": \"选择路径\",\r\n                \"selectedPath\": \"已选路径\",\r\n                \"selectDiskPath\": \"选择挂载路径\",\r\n                \"initDeploy\": \"存储卷初始化配置\",\r\n                \"capacity\": \"存储卷容量\",\r\n                \"initInfo\": \"设置个人网盘存储卷的挂载路径、文件系统类型\",\r\n                \"path\": \"存储卷挂载路径\",\r\n                \"fileSystemTypes\": \"文件系统类型\",\r\n                \"personalStorage\": \"个人网盘配额\",\r\n                \"quota\": \"个人网盘配额\",\r\n                \"storageInfo\": \"设置每个用户个人网盘总空间大小\",\r\n                \"modifySuccess\": \"应用配置成功\"\r\n            }\r\n        }\r\n    }\r\n</i18n>\r\n<style scoped>\r\n    .panel-body-list {\r\n        height: calc(100% - 160px);\r\n    }\r\n    .panel-body-list header {\r\n        font-family: MicrosoftYaHei;\r\n        font-size: 16px;\r\n        color: #696e79;\r\n        font-weight: bold;\r\n    }\r\n    .panel-body-list .tip-info {\r\n        font-family: MicrosoftYaHei;\r\n        font-size: 12px;\r\n        line-height: 36px;\r\n        color: #bcc5d9;\r\n    }\r\n    .panel-body-list label {\r\n        font-family: MicrosoftYaHei;\r\n        font-size: 14px;\r\n        color: #696e79;\r\n        line-height: 40px;\r\n        width: 200px;\r\n        display: inline-block;\r\n        text-align: right;\r\n    }\r\n    .panel-body-list .parameter-input input {\r\n        width: 200px;\r\n        height: 40px;\r\n        box-sizing: border-box;\r\n        padding: 0 10px;\r\n        border-radius: 1px;\r\n        border: 1px solid #cad8df; \r\n    }\r\n    .parameter-form:not(:last-child) {\r\n        margin-top: 20px;\r\n        border-bottom: 1px solid #cad8df;\r\n    }\r\n    .btn-apply-size {\r\n        width: 132px;\r\n        height: 40px;\r\n        border-radius: 2px;\r\n        margin-left: 230px;\r\n        margin-bottom: 40px;\r\n    }\r\n    .parameter-textarea {\r\n        width: 360px;\r\n        height: 120px;\r\n        border-radius: 1px;\r\n        border: solid 1px #cad8df;\r\n        background-color: #f5f7f8;\r\n        margin-bottom: 10px;\r\n        overflow-y: auto;\r\n        color: #696e79;\r\n        font-size: 12px;\r\n        padding: 10px;\r\n        box-sizing: border-box;\r\n    }\r\n    .parameter-select-btn {\r\n        clear: both;\r\n        margin-left: 230px;\r\n    }\r\n    .parameter-select-btn button {\r\n        width: 95px;\r\n        height: 30px;\r\n        background-color: #e6f4ff;\r\n        border: 0;\r\n        color: #22a5df;\r\n        cursor: pointer;\r\n    }\r\n    .select-unit {\r\n        font-family: MicrosoftYaHei;\r\n        font-size: 14px;\r\n        display: inline-block;\r\n        width: 150px;\r\n        height: 40px;\r\n        background-color: #ffffff;\r\n        border-radius: 1px;\r\n        margin-left: 10px;\r\n    }\r\n    .dialog-body {\r\n        margin-bottom: 20px;\r\n        padding-left: 25px;\r\n    }\r\n    .dialog-footer {\r\n        padding-top: 20px;\r\n        padding-right: 45px;\r\n        text-align: right;\r\n        border-top: #cad8df 1px solid;\r\n    }\r\n    .btn-sm {\r\n        width: 132px;\r\n        height: 40px;\r\n    }\r\n    .no-child-folder {\r\n        margin-left: 8px;\r\n        height: 1px;\r\n        width: 1px;\r\n        display: inline-block;\r\n    }\r\n    .fa {\r\n        width: 8px;\r\n        display: inline-block;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/parameter/parameter.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"h-full\"},[_c('div',{staticClass:\"panel-nav\"},[_c('el-breadcrumb',{staticClass:\"m-l-lg\",attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',[_vm._v(\"\\n            \"+_vm._s(_vm.$t('parameter.title'))+\"\\n            \")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"panel-body-list clearfix\"},[_c('section',{staticClass:\"m-t-sm\"},[_c('header',[_vm._v(_vm._s(_vm.$t('parameter.initDeploy')))]),_vm._v(\" \"),_c('span',{staticClass:\"tip-info\"},[_vm._v(_vm._s(_vm.$t('parameter.initInfo')))]),_vm._v(\" \"),_c('vue-form',{key:\"init\",staticClass:\"parameter-form\",attrs:{\"state\":_vm.formState},on:{\"submit\":function($event){$event.preventDefault();_vm.onSubmit($event)}}},[_c('validate',{key:\"fileSystemPath\",staticClass:\"m-b-md clearfix\",attrs:{\"tag\":\"div\"}},[_c('div',{staticClass:\"pull-left\"},[_c('label',{staticClass:\"required\",domProps:{\"textContent\":_vm._s(_vm.$t('parameter.path'))}})]),_vm._v(\" \"),_c('div',{staticClass:\"pull-left parameter-input m-l-lg\"},[_c('div',{staticClass:\"parameter-textarea\"},[_vm._l((_vm.data.fileSystemPath),function(value){return _c('span',{key:value},[_vm._v(_vm._s(value)),_c('br')])}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.data.fileSystemPath),expression:\"data.fileSystemPath\"}],attrs:{\"type\":\"hidden\",\"name\":\"fileSystemPath\",\"required\":\"\"},domProps:{\"value\":(_vm.data.fileSystemPath)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.data, \"fileSystemPath\", $event.target.value)}}})],2)]),_vm._v(\" \"),_c('div',{staticClass:\"parameter-select-btn\"},[_c('button',{attrs:{\"type\":\"button\"},on:{\"click\":_vm.selectPath}},[_vm._v(_vm._s(_vm.$t('parameter.selectPath')))])])]),_vm._v(\" \"),_c('validate',{key:\"capacity\",staticClass:\"m-b-md clearfix\",attrs:{\"tag\":\"div\"}},[_c('div',{staticClass:\"pull-left\"},[_c('label',{staticClass:\"required\",domProps:{\"textContent\":_vm._s(_vm.$t('parameter.capacity'))}})]),_vm._v(\" \"),_c('div',{staticClass:\"pull-left parameter-input m-l-lg\",staticStyle:{\"font-size\":\"0\"}},[(_vm.isCapacityGB)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.data.capacity),expression:\"data.capacity\"}],attrs:{\"type\":\"text\",\"name\":\"capacity\",\"required\":true},domProps:{\"value\":(_vm.data.capacity)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.data, \"capacity\", $event.target.value)}}}):_vm._e(),_vm._v(\" \"),(!_vm.isCapacityGB)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.data.capacityTB),expression:\"data.capacityTB\"}],attrs:{\"type\":\"text\",\"name\":\"capacity\",\"required\":true},domProps:{\"value\":(_vm.data.capacityTB)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.data, \"capacityTB\", $event.target.value)}}}):_vm._e(),_vm._v(\" \"),_c('select-area',{staticClass:\"select-unit\",attrs:{\"options\":_vm.units.options},on:{\"getSelectValue\":_vm.getUnitValue},model:{value:(_vm.data.unit),callback:function ($$v) {_vm.$set(_vm.data, \"unit\", $$v)},expression:\"data.unit\"}})],1)]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-transform btn-apply-size\",attrs:{\"disabled\":_vm.formDisabled}},[_vm._v(_vm._s(_vm.$t('parameter.apply')))])],1)],1),_vm._v(\" \"),_c('section',{staticClass:\"m-t-lg\"},[_c('header',[_vm._v(_vm._s(_vm.$t('parameter.personalStorage')))]),_vm._v(\" \"),_c('span',{staticClass:\"tip-info\"},[_vm._v(_vm._s(_vm.$t('parameter.storageInfo')))]),_vm._v(\" \"),_c('vue-form',{key:\"storage\",staticClass:\"parameter-form\",attrs:{\"state\":_vm.storageFormState},on:{\"submit\":function($event){$event.preventDefault();_vm.onStorageSubmit($event)}}},[_vm._l((_vm.storageFields),function(row){return _c('validate',{key:row.name,staticClass:\"m-b-md clearfix\",attrs:{\"tag\":\"div\"}},[_c('div',{staticClass:\"pull-left\"},[_c('label',{class:row.required?'required':'',domProps:{\"textContent\":_vm._s(row.showName)}})]),_vm._v(\" \"),_c('div',{staticClass:\"pull-left parameter-input m-l-lg\"},[(row.type === 'select')?_c('select-area',{attrs:{\"placeholder\":row.placeholder,\"name\":row.name,\"options\":row.options,\"value\":_vm.data[row.name],\"required\":true},on:{\"getSelectValue\":_vm.getChangeSelectValue}}):_vm._e(),_vm._v(\" \"),(row.type === 'text')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.data[row.name]),expression:\"data[row.name]\"}],attrs:{\"type\":\"text\",\"name\":row.name,\"placeholder\":row.placeholder,\"required\":true},domProps:{\"value\":(_vm.data[row.name])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.data, row.name, $event.target.value)}}}):_vm._e(),_vm._v(\" \"),(!!row.unit)?_c('span',[_vm._v(_vm._s(row.unit))]):_vm._e()],1)])}),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-transform btn-apply-size\",attrs:{\"disabled\":_vm.storageFormDisabled}},[_vm._v(_vm._s(_vm.$t('parameter.apply')))])],2)],1)]),_vm._v(\" \"),_c('el-dialog',{ref:\"selectDialog\",staticClass:\"path-dialog\",attrs:{\"visible\":_vm.selectPathData.visible,\"title\":_vm.$t('parameter.selectDiskPath')},on:{\"update:visible\":function($event){_vm.$set(_vm.selectPathData, \"visible\", $event)},\"close\":_vm.selectPathData.close}},[_c('div',{staticClass:\"dialog-body clearfix\"},[_c('div',{staticClass:\"path-panel\"},[_c('span',[_vm._v(_vm._s(_vm.$t('parameter.selectPath')))]),_vm._v(\" \"),_c('div',{staticClass:\"path-select-panel\"},_vm._l((_vm.selectPathData.data),function(row){return _c('div',{on:{\"click\":function($event){_vm.changeSelected(row)}}},[_c('span',[(!row.subDisks)?_c('span',{class:[row.subDisks?'':'no-child-folder']}):_vm._e(),_vm._v(\" \"),(row.subDisks && row.isOpen)?_c('i',{staticClass:\"fa fa-caret-down folder-icon\"}):_vm._e(),_vm._v(\" \"),(row.subDisks && !row.isOpen)?_c('i',{staticClass:\"fa fa-caret-right folder-icon\"}):_vm._e(),_vm._v(\" \"),_c('el-checkbox',{attrs:{\"checked\":row.isSelected,\"indeterminate\":row.isIndeterminate},on:{\"change\":function($event){_vm.firstPathChange(row)}},model:{value:(row.isSelected),callback:function ($$v) {_vm.$set(row, \"isSelected\", $$v)},expression:\"row.isSelected\"}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-folder text-folder\"}),_vm._v(\" \"),_c('span',{staticClass:\"folder-name m-l-xs\"},[_vm._v(_vm._s(row.path))])],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(row.subDisks && row.isOpen),expression:\"row.subDisks && row.isOpen\"}],staticClass:\"m-l-lg\"},_vm._l((row.subDisks),function(child){return _c('span',[_c('el-checkbox',{attrs:{\"checked\":child.isSelected},on:{\"change\":function($event){_vm.childPathChange(child, row)}},model:{value:(child.isSelected),callback:function ($$v) {_vm.$set(child, \"isSelected\", $$v)},expression:\"child.isSelected\"}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-folder text-folder\"}),_vm._v(\" \"),_c('span',{staticClass:\"folder-name m-l-xs\"},[_vm._v(_vm._s(child.path))]),_c('br')],1)}))])})),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.$t('parameter.selectedPath')))]),_vm._v(\" \"),_c('div',{staticClass:\"path-selected-panel\"},_vm._l((_vm.data.fileSystemPathDialog),function(value){return _c('span',{key:value},[_vm._v(_vm._s(value)),_c('br')])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\"},[_c('el-button',{staticClass:\"btn btn-gradient btn-sm\",on:{\"click\":_vm.selectPathData.confirm}},[_vm._v(_vm._s(_vm.$t('common.confirm')))]),_vm._v(\" \"),_c('el-button',{staticClass:\"btn btn-transparent btn-sm\",on:{\"click\":_vm.selectPathData.close}},[_vm._v(_vm._s(_vm.$t('common.cancel')))])],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-437b7a25\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/parameter/parameter.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-437b7a25\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./parameter.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./parameter.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./parameter.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-437b7a25\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./parameter.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-437b7a25\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* customBlocks */\nvar customBlock = require(\"!!@kazupon/vue-i18n-loader!../../../node_modules/vue-loader/lib/selector?type=customBlocks&index=0!./parameter.vue\")\nif (customBlock && customBlock.__esModule) {\n  customBlock = customBlock.default\n}\nif (typeof customBlock === \"function\") {\n  customBlock(Component)\n}\n\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/parameter/parameter.vue\n// module id = null\n// module chunks = ","module.exports = function (Component) {\n  Component.options.__i18n = Component.options.__i18n || []\n  Component.options.__i18n.push('{\"zh\":{\"parameter\":{\"title\":\"参数配置\",\"apply\":\"应用\",\"selectPath\":\"选择路径\",\"selectedPath\":\"已选路径\",\"selectDiskPath\":\"选择挂载路径\",\"initDeploy\":\"存储卷初始化配置\",\"capacity\":\"存储卷容量\",\"initInfo\":\"设置个人网盘存储卷的挂载路径、文件系统类型\",\"path\":\"存储卷挂载路径\",\"fileSystemTypes\":\"文件系统类型\",\"personalStorage\":\"个人网盘配额\",\"quota\":\"个人网盘配额\",\"storageInfo\":\"设置每个用户个人网盘总空间大小\",\"modifySuccess\":\"应用配置成功\"}}}')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@kazupon/vue-i18n-loader/lib!./node_modules/vue-loader/lib/selector.js?type=customBlocks&index=0!./src/components/parameter/parameter.vue\n// module id = dV33\n// module chunks = 8"],"sourceRoot":""}